{"version":3,"file":"static/js/691.47203846.chunk.js","mappings":"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","sources":["../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/contacts/contacts.selectors.js","../node_modules/nanoid/url-alphabet/index.js","../node_modules/nanoid/index.browser.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactDetailsModal/ContactDetailsModal.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectContacts = (state) => state.contactsStore.contacts;\nexport const selectIsLoading = (state) => state.contactsStore.isLoading;\nexport const selectError = (state) => state.contactsStore.error;\nexport const selectFilter = (state) => state.filterStore.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    if (!filter) {\n      return contacts;\n    }\n    const filteredContacts = contacts.filter((contact) =>\n      contact.name.toLowerCase().trim().includes(filter.toLowerCase().trim())\n    );\n\n    return filteredContacts;\n  }\n);\n","export const urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\n","import { urlAlphabet } from './url-alphabet/index.js'\nexport { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    id += urlAlphabet[bytes[size] & 63]\n  }\n  return id\n}\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { nanoid } from 'nanoid';\nimport { Notify } from 'notiflix';\nimport { selectContacts } from 'redux/contacts/contacts.selectors';\nimport { addContact } from 'redux/contacts/contacts.operations';\nimport 'bootstrap/dist/css/bootstrap.min.css'; \n\nexport const ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const namePattern = /^[a-zA-Zа-яА-ЩЬЮЯҐЄІЇа-щьюяґєії]+(([' -][a-zA-Zа-яА-ЩЬЮЯҐЄІЇа-щьюяґєії ])?[a-zA-Zа-яА-ЩЬЮЯҐЄІЇа-щьюяґєії]*)*$/;\n  const numberPattern = /^\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}$/;\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n\n    const form = evt.target;\n    const { name, number } = form.elements;\n\n    const contactData = {\n      name: name.value,\n      number: number.value,\n      id: nanoid(),\n    };\n\n    const hasDuplicates = contacts.some(\n      (contact) =>\n        contact.name.toLowerCase().trim() ===\n        contactData.name.toLowerCase().trim()\n\n        && contact.number.trim() === contactData.number.trim()\n    );\n\n    if (hasDuplicates) {\n      Notify.warning(`Contact with name ${contactData.name} has already been added!`, {\n        timeout: 3000,\n\n      });\n      return;\n      \n    }\n\n    dispatch(addContact(contactData));\n    Notify.success(`Contact ${contactData.name} has been successfully added!`, {\n      timeout: 3000,\n    });\n    form.reset();\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"mt-3\">\n      <div className=\"mb-3\">\n        <label htmlFor=\"name\" className=\"form-label\">\n          Name\n        </label>\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          id=\"name\"\n          name=\"name\"\n          placeholder=\"Name\"\n          pattern={namePattern.source}\n          title=\"Only letters are allowed\"\n          required\n        />\n      </div>\n      <div className=\"mb-3\">\n        <label htmlFor=\"number\" className=\"form-label\">\n          Number\n        </label>\n        <input\n          type=\"tel\"\n          className=\"form-control\"\n          id=\"number\"\n          name=\"number\"\n          placeholder=\"Number\"\n          pattern={numberPattern.source}\n          title=\"Only digits are allowed\"\n          required\n        />\n      </div>\n      <button type=\"submit\" className=\"btn btn-primary\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/filter/filter.reducer';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector((state) => state.filterStore.filter);\n\n  const filterChange = (evt) => {\n    dispatch(setFilter(evt.target.value));\n  };\n\n  return (\n    <div className=\"mb-3\">\n      <label htmlFor=\"filter\" className=\"form-label\">\n        Search contacts\n      </label>\n      <input\n        type=\"text\"\n        id=\"filter\"\n        name=\"filter\"\n        placeholder=\"Search contacts\"\n        value={filter}\n        onChange={filterChange}\n        className=\"form-control\"\n      />\n    </div>\n  );\n};\n","import React from 'react';\nimport { Modal, Button, Image } from 'react-bootstrap';\n\nconst ContactDetailsModal = ({ contact, showModal, handleCloseModal }) => {\n  return (\n    <Modal show={showModal} onHide={handleCloseModal}>\n      <Modal.Header closeButton>\n        <Modal.Title>Contact Details</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <div className=\" d-flex justify-content-between align-items-center mb-3 p-3\">\n          <div className=\"mb-3\">\n            <p>Name: {contact.name}</p>\n            <p>Number: {contact.number}</p>\n            <p>Email: {contact.email}</p>\n          </div>\n          <div className=\"mt-3 d-flex justify-content-end\">\n            <Image\n              src=\"https://i.pravatar.cc/150\"\n              width=\"150\"\n              alt=\"contactImg\"\n              rounded\n            />\n          </div>\n        </div>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={handleCloseModal}>\n          Close\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default ContactDetailsModal;\n","// ContactListItem.js\n\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/contacts.operations';\nimport { Button } from 'react-bootstrap';\nimport ContactDetailsModal from '../../components/ContactDetailsModal/ContactDetailsModal';\nimport { Notify } from 'notiflix';\n\nexport const ContactListItem = ({ name, number, id }) => {\n  const dispatch = useDispatch();\n  const [showModal, setShowModal] = useState(false);\n\n  const handleDelete = () => {\n    dispatch(deleteContact(id));\n    Notify.success(`Contact ${name} has been successfully deleted!`, {\n      timeout: 3000,\n    });\n  };\n\n  const handleShowModal = () => setShowModal(true);\n  const handleCloseModal = () => setShowModal(false);\n\n  return (\n    <>\n      <li className=\"list-group-item d-flex justify-content-between align-items-center\" key={id}>\n        <div>\n          <p className=\"mb-0 font-weight-bold  cursor-pointer\" onClick={handleShowModal}>\n            {name}:\n          </p>\n          <p className=\"mb-0\">{number}</p>\n        </div>\n        <div>\n          <Button variant=\"outline-info\" type=\"button\" className=\"me-2 m-2\" onClick={handleShowModal}>\n            Details\n          </Button>\n          <Button variant=\"outline-danger\" type=\"button\"  onClick={handleDelete}>\n            Delete\n          </Button>\n        </div>\n      </li>\n\n      <ContactDetailsModal contact={{ name, number }} showModal={showModal} handleCloseModal={handleCloseModal} />\n    </>\n  );\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectVisibleContacts } from 'redux/contacts/contacts.selectors';\nimport { ContactListItem } from 'components/ContactListItem/ContactListItem';\nimport 'bootstrap/dist/css/bootstrap.min.css'; \n\nexport const ContactList = () => {\n  const contacts = useSelector(selectVisibleContacts);\n\n  return (\n    <ul className=\"list-group\">\n      {contacts.length !== 0 ? (\n        contacts.map((contact) => (\n          <ContactListItem\n            name={contact.name}\n            number={contact.number}\n            key={contact.id}\n            id={contact.id}\n          />\n        ))\n      ) : (\n        <li className=\"list-group-item text-center\">\n          There are no contacts\n        </li>\n      )}\n    </ul>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Notify } from 'notiflix';\nimport { fetchContacts } from '../../redux/contacts/contacts.operations';\nimport {\n  selectError,\n  selectIsLoading,\n} from 'redux/contacts/contacts.selectors';\nimport { ContactForm } from '../../components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Loader } from 'components/Loader/Loader';\nimport 'bootstrap/dist/css/bootstrap.min.css'; \n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div className=\"container mt-3\">\n      {isLoading && !error && <Loader />}\n      <div>\n        <div>\n          <h1>Add new contact:</h1>\n          <ContactForm />\n          <Filter />\n        </div>\n\n        <div>\n          <h2>Contacts</h2>\n          {error &&\n            Notify.failure(\n              `Oops, some error occurred... Please try reloading the page`,\n              { timeout: 2000 }\n            )}\n          <ContactList />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ContactsPage;\n\n"],"names":["NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectContacts","state","contactsStore","contacts","selectIsLoading","isLoading","selectError","error","selectVisibleContacts","filterStore","filter","contact","toLowerCase","trim","includes","urlAlphabet","nanoid","size","id","bytes","crypto","getRandomValues","Uint8Array","ContactForm","useSelector","dispatch","useDispatch","_jsxs","onSubmit","evt","preventDefault","form","target","number","elements","contactData","some","Notify","timeout","addContact","reset","className","children","_jsx","htmlFor","type","placeholder","pattern","source","title","required","Filter","onChange","setFilter","_ref","showModal","handleCloseModal","Modal","show","onHide","closeButton","email","Image","src","width","alt","rounded","Button","variant","onClick","ContactListItem","setShowModal","useState","handleShowModal","_Fragment","handleDelete","deleteContact","ContactDetailsModal","ContactList","ContactsPage","useEffect","fetchContacts","Loader"],"sourceRoot":""}